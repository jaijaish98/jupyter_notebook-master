•	You are given a binary tree in which each node contains a value. Design an algorithm to print all paths which sum up to that value. Note that it can be any path in the tree it does not have to start at the root.


•	Imagine you have a call center with three levels of employees: fresher, technical lead (TL), product manager (PM). There can be multiple employees, but only one TL or PM. An incoming telephone call must be allocated to a fresher who is free. If a fresher can’t handle the call, he or she must escalate the call to technical lead. If the TL is not free or not able to handle it, then the call should be escalated to PM. Design the classes and data structures for this problem. Implement a method getCallHandler().


•	Write an algorithm to print all ways of arranging eight queens on a chess board so that none of them share the same row, column or diagonal.


•	You are given an array of integers (both positive and negative). Find the continuous sequence with the largest sum. Return the sum. EXAMPLE Input: {2, -8, 3, -2, 4, -10} Output: 5 (i.e., {3, -2, 4} )


•	Write a program to find the longest word made of other words in a list of words. EXAMPLE Input: test, tester, testertest, testing, testingtester Output: testingtester


•	Given two words of equal length that are in a dictionary, write a method to transform one word into another word by changing only one letter at a time. The new word you get in each step must be in the dictionary. 
EXAMPLE
Input: DAMP, LIKE Output: DAMP -> LAMP -> LIMP -> LIME -> LIKE


•	Given an NxN matrix of positive and negative integers, write code to find the submatrix with the largest possible sum.


•	Imagine you have a square matrix, where each cell is filled with either black or white. Design an algorithm to find the maximum subsquare such that all four borders are filled with black pixels.


•	Construct Tree from given Inorder and Preorder traversals
Inorder sequence: D B E A F C
Preorder sequence: A B D E C F


•	Given a string s find the longest substring that is a palindrome 



•	Find The Ring

There is a new magician in town. His trick is known as "Find the Ring". He puts 3 glasses at 3 spots on the table, labeling them as 0, 1 and 2. Now, he hides a ring under one of the glasses. The glasses are opaque and placed upside down, so that the ring is not visible to the audience. Now, he begins to make certain swaps in between adjacent glasses, i.e. the glass at position 0 can be swapped with that at position 1, and the glass at position 2 can be swapped with glass at 1. Assuming that all swaps are done randomly with equal probability of 50%, you have to find index of the glass that is most likely to have the ring, at the end. In case of a tie, choose the one with lower index. Assume that the glass containing the ring was swapped exactly N times. Input: First line contain two space separated integers, index and N. index is index of glass that initially contains the ring and N is the total number of swaps involving the glass with ring. 

SAMPLE INPUT 
3 1 1 0 1 2 2 
SAMPLE OUTPUT 
0 1 0 
Explanation Case 1: 
The ring is at index 1. There is only one swap to be made. The probability of ring ending up at 0 is .5, at 1 is 0 and at 2 is also .5 So, we have a tie between positions 0 and 2. We must choose the lower index, i.e. 0

Case 2: The ring is at index 0. There is only one swap to be made. There is also only one choice. The probability of ring ending up at 0 is 0, at 1 is 1 and at 2 is 0. The maximum probability occurs at index 1. 

Case 3: The ring is situated at index 2. There are 2 swaps to be made. So, we can make following swaps: {2 -> 1 -> 0} or {2 -> 1 -> 2} Hence, the probability of ring ending up at 0 is .5, at 1 is 0 and at 2 is .5 Again, there is a tie between 0 and 2, and we choose 0, i.e. the lower index. 



•	Arjit and army
Little Arjit is the leader of a marvellous fighting army. His team is very good at fighting against all their enemies. But like Hound from Game of Thrones, Little Arjit and his entire team is scared of fire. When they see fire, they feel threatened, and scared like a little child, and dont even mind giving up from a fight. Now, you are given the location of the army men of Little Arjit, their enemies, and fire in a pathway. You've got to figure out how many enemies will survive after the massacre done by Little Arjit and his army. Let's say Little Arjit and his army is denoted by "X", all their enemies are denoted by "O", and fire is denoted as "*" Here is what happens: When a X faces an O, i.e., when X is adjacent to O, X kills O. Always. Whenever there will be an O adjacent to X ,X will kill O . The moment X faces a *, he stops, and he cannot move any further. Given a string containing X, O, * - can you help Little Arjit figure out how many of his enemies will still survive this attack because of fire? 

Input: First line of input contains a single string S. 

Output: Print number of enemies survive after attack. 

Constraints:
 1<=|S|<=100000 
Note : Input is given in upper case. 

SAMPLE INPUT 
X*OO*XX 
X*OX*XO* 
X*OO*OO*X*OX* 

SAMPLE OUTPUT 
2
0
4 



